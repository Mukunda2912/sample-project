# # This workflow will build a golang project
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go


name: sonar-project

   
on:
  push:
    branches: [ "new-workflow" ]
  pull_request:
    branches: [ "master" ]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    runs-on: 
    - self-hosted
    - label1
 

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build
        run: go build -v ./src
      - name: Run unit Tests
        run: |
           go test -coverprofile=./src/cov.out ./src/
           go test -json ./src/ > reports.json
 
      - name: Upload report.json to Sonarqube
        uses: actions/upload-artifact@v3.1.2
        with:
          name: sonarqube-report
          path: reports.json
  
#       - uses: actions/download-artifact@v2.1.1
#         with:
#           name: sonarqube-report
#           path: reports.json
      - uses: sonarsource/sonarqube-scan-action@master
        with:
          args: >
             -Dsonar.projectKey=first-ghapp
             -Dsonar.exclusions=**/*_test.go
             -Dsonar.go.coverage.reportPaths=./src/cov.out
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
   #          -Dsonar.go.tests.reportPaths=sonarqube-report
             
             
             
      
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
